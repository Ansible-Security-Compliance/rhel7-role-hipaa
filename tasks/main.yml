-   check_mode: false
    name: Read permission of GPG key directory
    register: gpg_key_directory_permission
    stat:
        path: /etc/pki/rpm-gpg/
    tags:
    - ensure_redhat_gpgkey_installed
    - high_severity
    - restrict_strategy
    - medium_complexity
    - medium_disruption
    - CCE-26957-1
    - NIST-800-53-CM-5(3)
    - NIST-800-53-SI-7
    - NIST-800-53-MA-1(b)
    - NIST-800-171-3.4.8
    - PCI-DSS-Req-6.2
    - CJIS-5.10.4.1
-   changed_when: false
    check_mode: false
    name: Read signatures in GPG key
    register: gpg_fingerprints
    shell: gpg --with-fingerprint '/etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release' | grep 'Key fingerprint =' | tr -s ' ' | sed
        's;.*= ;;g'
    tags:
    - ensure_redhat_gpgkey_installed
    - high_severity
    - restrict_strategy
    - medium_complexity
    - medium_disruption
    - CCE-26957-1
    - NIST-800-53-CM-5(3)
    - NIST-800-53-SI-7
    - NIST-800-53-MA-1(b)
    - NIST-800-171-3.4.8
    - PCI-DSS-Req-6.2
    - CJIS-5.10.4.1
-   name: Set Fact - Valid fingerprints
    set_fact:
        gpg_valid_fingerprints: ("567E 347A D004 4ADE 55BA 8A5F 199E 2F91 FD43 1D51" "43A6 E49C 4A38 F4BE 9ABF 2A53 4568 9C88
            2FA6 58E0")
    tags:
    - ensure_redhat_gpgkey_installed
    - high_severity
    - restrict_strategy
    - medium_complexity
    - medium_disruption
    - CCE-26957-1
    - NIST-800-53-CM-5(3)
    - NIST-800-53-SI-7
    - NIST-800-53-MA-1(b)
    - NIST-800-171-3.4.8
    - PCI-DSS-Req-6.2
    - CJIS-5.10.4.1
-   name: Import RedHat GPG key
    rpm_key:
        key: /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release
        state: present
    tags:
    - ensure_redhat_gpgkey_installed
    - high_severity
    - restrict_strategy
    - medium_complexity
    - medium_disruption
    - CCE-26957-1
    - NIST-800-53-CM-5(3)
    - NIST-800-53-SI-7
    - NIST-800-53-MA-1(b)
    - NIST-800-171-3.4.8
    - PCI-DSS-Req-6.2
    - CJIS-5.10.4.1
    when: (gpg_key_directory_permission.stat.mode <= '0755') and (( gpg_fingerprints.stdout_lines | difference(gpg_valid_fingerprints))
        | length == 0) and (gpg_fingerprints.stdout_lines | length > 0) and (ansible_distribution == "RedHat")
-   find:
        paths: /etc/yum.repos.d/
        patterns: '*.repo'
    name: Find All Yum Repositories
    register: yum_find
-   lineinfile:
        create: true
        dest: '{{ item.path }}'
        line: gpgcheck=1
        regexp: ^gpgcheck
    name: Ensure gpgcheck Enabled For All Yum Package Repositories
    tags:
    - ensure_gpgcheck_never_disabled
    - high_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - CCE-26876-3
    - NIST-800-53-CM-5(3)
    - NIST-800-53-SI-7
    - NIST-800-53-MA-1(b)
    - NIST-800-171-3.4.8
    - PCI-DSS-Req-6.2
    - CJIS-5.10.4.1
    with_items: '{{ yum_find.files }}'
-   check_mode: false
    name: Check existence of yum on Fedora
    register: yum_config_file
    stat:
        path: /etc/yum.conf
    when: ansible_distribution == "Fedora"
-   ini_file:
        create: true
        dest: '{{item}}'
        option: localpkg_gpgcheck
        section: main
        value: 1
    name: Ensure GPG check Enabled for Local Packages (Yum)
    tags:
    - ensure_gpgcheck_local_packages
    - high_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - CCE-80347-8
    - NIST-800-53-CM-5(3)
    - NIST-800-171-3.4.8
    - DISA-STIG-RHEL-07-020060
    when: ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or yum_config_file.stat.exists
    with_items: /etc/yum.conf
-   ini_file:
        create: true
        dest: '{{item}}'
        option: localpkg_gpgcheck
        section: main
        value: 1
    name: Ensure GPG check Enabled for Local Packages (DNF)
    tags:
    - ensure_gpgcheck_local_packages
    - high_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - CCE-80347-8
    - NIST-800-53-CM-5(3)
    - NIST-800-171-3.4.8
    - DISA-STIG-RHEL-07-020060
    when: ansible_distribution == "Fedora"
    with_items: /etc/dnf/dnf.conf
-   check_mode: false
    name: Check existence of yum on Fedora
    register: yum_config_file
    stat:
        path: /etc/yum.conf
    when: ansible_distribution == "Fedora"
-   ini_file:
        create: false
        dest: '{{item}}'
        option: gpgcheck
        section: main
        value: 1
    name: Ensure GPG check is globally activated (yum)
    tags:
    - ensure_gpgcheck_globally_activated
    - high_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - CCE-26989-4
    - NIST-800-53-CM-5(3)
    - NIST-800-53-SI-7
    - NIST-800-53-MA-1(b)
    - NIST-800-171-3.4.8
    - PCI-DSS-Req-6.2
    - CJIS-5.10.4.1
    - DISA-STIG-RHEL-07-020050
    when: ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or yum_config_file.stat.exists
    with_items: /etc/yum.conf
-   ini_file:
        create: false
        dest: '{{item}}'
        option: gpgcheck
        section: main
        value: 1
    name: Ensure GPG check is globally activated (dnf)
    tags:
    - ensure_gpgcheck_globally_activated
    - high_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - CCE-26989-4
    - NIST-800-53-CM-5(3)
    - NIST-800-53-SI-7
    - NIST-800-53-MA-1(b)
    - NIST-800-171-3.4.8
    - PCI-DSS-Req-6.2
    - CJIS-5.10.4.1
    - DISA-STIG-RHEL-07-020050
    when: ansible_distribution == "Fedora"
    with_items: /etc/dnf/dnf.conf
-   changed_when: false
    check_mode: false
    failed_when: false
    name: Read list of files with incorrect permissions
    register: files_with_incorrect_permissions
    shell: rpm -Va | grep '^.M' | cut -d ' ' -f5- | sed -r 's;^.*\s+(.+);\1;g'
    tags:
    - rpm_verify_permissions
    - high_severity
    - restrict_strategy
    - high_complexity
    - medium_disruption
    - CCE-27209-6
    - NIST-800-53-AC-6
    - NIST-800-53-AU-9(1)
    - NIST-800-53-AU-9(3)
    - NIST-800-53-CM-6(d)
    - NIST-800-53-CM-6(3)
    - NIST-800-171-3.3.8
    - NIST-800-171-3.4.1
    - PCI-DSS-Req-11.5
    - CJIS-5.10.4.1
    - DISA-STIG-RHEL-07-010010
-   name: Correct file permissions with RPM
    shell: rpm --quiet --setperms $(rpm -qf '{{item}}')
    tags:
    - rpm_verify_permissions
    - high_severity
    - restrict_strategy
    - high_complexity
    - medium_disruption
    - CCE-27209-6
    - NIST-800-53-AC-6
    - NIST-800-53-AU-9(1)
    - NIST-800-53-AU-9(3)
    - NIST-800-53-CM-6(d)
    - NIST-800-53-CM-6(3)
    - NIST-800-171-3.3.8
    - NIST-800-171-3.4.1
    - PCI-DSS-Req-11.5
    - CJIS-5.10.4.1
    - DISA-STIG-RHEL-07-010010
    when: files_with_incorrect_permissions.stdout_lines | length > 0
    with_items: '{{ files_with_incorrect_permissions.stdout_lines }}'
-   name: 'Set fact: Package manager reinstall command (dnf)'
    set_fact:
        package_manager_reinstall_cmd: dnf reinstall -y
    tags:
    - rpm_verify_hashes
    - high_severity
    - unknown_strategy
    - high_complexity
    - medium_disruption
    - CCE-27157-7
    - NIST-800-53-CM-6(d)
    - NIST-800-53-CM-6(3)
    - NIST-800-53-SI-7(1)
    - NIST-800-171-3.3.8
    - NIST-800-171-3.4.1
    - PCI-DSS-Req-11.5
    - CJIS-5.10.4.1
    - DISA-STIG-RHEL-07-010020
    when: ansible_distribution == "Fedora"
-   name: 'Set fact: Package manager reinstall command (yum)'
    set_fact:
        package_manager_reinstall_cmd: yum reinstall -y
    tags:
    - rpm_verify_hashes
    - high_severity
    - unknown_strategy
    - high_complexity
    - medium_disruption
    - CCE-27157-7
    - NIST-800-53-CM-6(d)
    - NIST-800-53-CM-6(3)
    - NIST-800-53-SI-7(1)
    - NIST-800-171-3.3.8
    - NIST-800-171-3.4.1
    - PCI-DSS-Req-11.5
    - CJIS-5.10.4.1
    - DISA-STIG-RHEL-07-010020
    when: ansible_distribution == "RedHat" or ansible_distribution == "OracleLinux"
-   changed_when: false
    check_mode: false
    name: Read files with incorrect hash
    register: files_with_incorrect_hash
    shell: rpm -Va | grep -E '^..5.* /(bin|sbin|lib|lib64|usr)/' | sed -r 's;^.*\s+(.+);\1;g'
    tags:
    - rpm_verify_hashes
    - high_severity
    - unknown_strategy
    - high_complexity
    - medium_disruption
    - CCE-27157-7
    - NIST-800-53-CM-6(d)
    - NIST-800-53-CM-6(3)
    - NIST-800-53-SI-7(1)
    - NIST-800-171-3.3.8
    - NIST-800-171-3.4.1
    - PCI-DSS-Req-11.5
    - CJIS-5.10.4.1
    - DISA-STIG-RHEL-07-010020
    when: package_manager_reinstall_cmd is defined
-   name: Reinstall packages of files with incorrect hash
    shell: '{{package_manager_reinstall_cmd}} $(rpm -qf ''{{item}}'')'
    tags:
    - rpm_verify_hashes
    - high_severity
    - unknown_strategy
    - high_complexity
    - medium_disruption
    - CCE-27157-7
    - NIST-800-53-CM-6(d)
    - NIST-800-53-CM-6(3)
    - NIST-800-53-SI-7(1)
    - NIST-800-171-3.3.8
    - NIST-800-171-3.4.1
    - PCI-DSS-Req-11.5
    - CJIS-5.10.4.1
    - DISA-STIG-RHEL-07-010020
    when: package_manager_reinstall_cmd is defined and (files_with_incorrect_hash.stdout_lines | length > 0)
    with_items: '{{ files_with_incorrect_hash.stdout_lines }}'
-   name: XCCDF Value var_selinuxuser_execstack
    set_fact:
        var_selinuxuser_execstack: 'true'
    tags:
    - always
-   name: Ensure libsemanage-python installed
    package:
        name: libsemanage-python
        state: latest
-   name: Set SELinux boolean selinuxuser_execstack accordingly
    seboolean:
        name: selinuxuser_execstack
        persistent: true
        state: '{{ var_selinuxuser_execstack }}'
    tags:
    - sebool_selinuxuser_execstack
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - DISA-STIG-RHEL-07-TBD
-   name: XCCDF Value var_selinuxuser_execmod
    set_fact:
        var_selinuxuser_execmod: 'true'
    tags:
    - always
-   name: Ensure libsemanage-python installed
    package:
        name: libsemanage-python
        state: latest
-   name: Set SELinux boolean selinuxuser_execmod accordingly
    seboolean:
        name: selinuxuser_execmod
        persistent: true
        state: '{{ var_selinuxuser_execmod }}'
    tags:
    - sebool_selinuxuser_execmod
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - DISA-STIG-RHEL-07-TBD
-   name: XCCDF Value var_selinuxuser_execheap
    set_fact:
        var_selinuxuser_execheap: 'false'
    tags:
    - always
-   name: Ensure libsemanage-python installed
    package:
        name: libsemanage-python
        state: latest
-   name: Set SELinux boolean selinuxuser_execheap accordingly
    seboolean:
        name: selinuxuser_execheap
        persistent: true
        state: '{{ var_selinuxuser_execheap }}'
    tags:
    - sebool_selinuxuser_execheap
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - DISA-STIG-RHEL-07-TBD
-   name: XCCDF Value var_selinux_state
    set_fact:
        var_selinux_state: enforcing
    tags:
    - always
-   lineinfile:
        create: true
        line: SELINUX={{ var_selinux_state }}
        path: /etc/sysconfig/selinux
        regexp: ^SELINUX=
    name: Ensure SELinux State is Enforcing
    tags:
    - selinux_state
    - high_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27334-2
    - NIST-800-53-AC-3
    - NIST-800-53-AC-3(3)
    - NIST-800-53-AC-3(4)
    - NIST-800-53-AC-4
    - NIST-800-53-AC-6
    - NIST-800-53-AU-9
    - NIST-800-53-SI-6(a)
    - NIST-800-171-3.1.2
    - NIST-800-171-3.7.2
    - DISA-STIG-RHEL-07-020210
-   name: XCCDF Value var_selinux_policy_name
    set_fact:
        var_selinux_policy_name: targeted
    tags:
    - always
-   lineinfile:
        create: true
        line: SELINUXTYPE={{ var_selinux_policy_name }}
        path: /etc/sysconfig/selinux
        regexp: ^SELINUXTYPE=
    name: Configure SELinux Policy
    tags:
    - selinux_policytype
    - high_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27279-9
    - NIST-800-53-AC-3
    - NIST-800-53-AC-3(3)
    - NIST-800-53-AC-3(4)
    - NIST-800-53-AC-4
    - NIST-800-53-AC-6
    - NIST-800-53-AU-9
    - NIST-800-53-SI-6(a)
    - NIST-800-171-3.1.2
    - NIST-800-171-3.7.2
    - DISA-STIG-RHEL-07-020220
-   name: Ensure sysctl kernel.randomize_va_space is set to 2
    sysctl:
        name: kernel.randomize_va_space
        reload: true
        state: present
        value: 2
    tags:
    - sysctl_kernel_randomize_va_space
    - medium_severity
    - disable_strategy
    - low_complexity
    - medium_disruption
    - CCE-27127-0
    - NIST-800-53-SC-30(2)
    - NIST-800-171-3.1.7
    - DISA-STIG-RHEL-07-040201
-   name: Ensure sysctl fs.suid_dumpable is set to 0
    sysctl:
        name: fs.suid_dumpable
        reload: true
        state: present
        value: 0
    tags:
    - sysctl_fs_suid_dumpable
    - unknown_severity
    - disable_strategy
    - low_complexity
    - medium_disruption
    - CCE-26900-1
    - NIST-800-53-SI-11
-   name: Ensure sysctl kernel.dmesg_restrict is set to 1
    sysctl:
        name: kernel.dmesg_restrict
        reload: true
        state: present
        value: 1
    tags:
    - sysctl_kernel_dmesg_restrict
    - unknown_severity
    - disable_strategy
    - low_complexity
    - medium_disruption
    - CCE-27050-4
    - NIST-800-53-SI-11
    - NIST-800-171-3.1.5
-   failed_when: service_result is failed and ('Could not find the requested service' not in service_result.msg)
    name: Disable service autofs
    register: service_result
    service:
        enabled: 'no'
        name: '{{item}}'
        state: stopped
    tags:
    - service_autofs_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - CCE-27498-5
    - NIST-800-53-AC-19(a)
    - NIST-800-53-AC-19(d)
    - NIST-800-53-AC-19(e)
    - NIST-800-53-IA-3
    - NIST-800-171-3.4.6
    - DISA-STIG-RHEL-07-020110
    with_items:
    - autofs
-   failed_when: socket_result is failed and ('Could not find the requested service' not in socket_result.msg)
    name: Disable socket of service autofs if applicable
    register: socket_result
    service:
        enabled: 'no'
        name: '{{item}}'
        state: stopped
    tags:
    - service_autofs_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - CCE-27498-5
    - NIST-800-53-AC-19(a)
    - NIST-800-53-AC-19(d)
    - NIST-800-53-AC-19(e)
    - NIST-800-53-IA-3
    - NIST-800-171-3.4.6
    - DISA-STIG-RHEL-07-020110
    with_items:
    - autofs.socket
-   lineinfile:
        create: true
        dest: /etc/modprobe.d/{{item}}.conf
        line: install {{item}} /bin/true
        regexp: '{{item}}'
    name: Ensure kernel module 'usb-storage' is disabled
    tags:
    - kernel_module_usb-storage_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - medium_disruption
    - CCE-27277-3
    - NIST-800-53-AC-19(a)
    - NIST-800-53-AC-19(d)
    - NIST-800-53-AC-19(e)
    - NIST-800-53-IA-3
    - NIST-800-171-3.1.21
    - DISA-STIG-RHEL-07-020100
    with_items:
    - usb-storage
-   name: XCCDF Value rsyslog_remote_loghost_address
    set_fact:
        rsyslog_remote_loghost_address: logcollector
    tags:
    - always
-   lineinfile:
        create: true
        dest: /etc/rsyslog.conf
        line: '*.* @@{{ rsyslog_remote_loghost_address }}'
        regexp: ^\*\.\*
    name: Set rsyslog remote loghost
    tags:
    - rsyslog_remote_loghost
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27343-3
    - NIST-800-53-AU-3(2)
    - NIST-800-53-AU-4(1)
    - NIST-800-53-AU-9
    - DISA-STIG-RHEL-07-031000
-   lineinfile:
        dest: /etc/audit/auditd.conf
        line: flush = data
        regexp: .*flush.*
    name: Configure auditd Flush Priority
    tags:
    - auditd_data_retention_flush
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27331-8
    - NIST-800-53-AU-9
    - NIST-800-53-AU-12(1)
    - NIST-800-171-3.3.1
-   name: Set architecture for audit truncate tasks
    set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
-   find:
        contains: -F key=perm_mod$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for other DAC audit rules
    register: find_truncate
-   name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/access.rules
    when: find_truncate.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_truncate.files | map(attribute=''path'') | list | first }}'
    when: find_truncate.matched > 0
-   lineinfile:
        create: true
        line: '{{ item }}'
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the truncate rule in rules.d when on x86
    tags:
    - audit_rules_unsuccessful_file_modification_truncate
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80389-0
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - DISA-STIG-RHEL-07-030540
    with_items:
    - -a always,exit -F arch=b32 -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access
    - -a always,exit -F arch=b32 -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access
-   lineinfile:
        create: true
        line: '{{ item }}'
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the truncate rule in rules.d when on x86_64
    tags:
    - audit_rules_unsuccessful_file_modification_truncate
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80389-0
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - DISA-STIG-RHEL-07-030540
    when: audit_arch == 'b64'
    with_items:
    - -a always,exit -F arch=b64 -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access
    - -a always,exit -F arch=b64 -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access
-   lineinfile:
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the truncate rule in /etc/audit/audit.rules when on x86
    tags:
    - audit_rules_unsuccessful_file_modification_truncate
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80389-0
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - DISA-STIG-RHEL-07-030540
    with_items:
    - -a always,exit -F arch=b32 -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access
    - -a always,exit -F arch=b32 -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access
-   lineinfile:
        create: true
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the truncate rule in audit.rules when on x86_64
    tags:
    - audit_rules_unsuccessful_file_modification_truncate
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80389-0
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - DISA-STIG-RHEL-07-030540
    when: audit_arch == 'b64'
    with_items:
    - -a always,exit -F arch=b64 -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access
    - -a always,exit -F arch=b64 -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access
-   name: Set architecture for audit openat tasks
    set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
-   find:
        contains: -F key=perm_mod$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for other DAC audit rules
    register: find_openat
-   name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/access.rules
    when: find_openat.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_openat.files | map(attribute=''path'') | list | first }}'
    when: find_openat.matched > 0
-   lineinfile:
        create: true
        line: '{{ item }}'
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the openat rule in rules.d when on x86
    tags:
    - audit_rules_unsuccessful_file_modification_openat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80387-4
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - DISA-STIG-RHEL-07-030520
    with_items:
    - -a always,exit -F arch=b32 -S openat -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access
    - -a always,exit -F arch=b32 -S openat -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access
-   lineinfile:
        create: true
        line: '{{ item }}'
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the openat rule in rules.d when on x86_64
    tags:
    - audit_rules_unsuccessful_file_modification_openat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80387-4
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - DISA-STIG-RHEL-07-030520
    when: audit_arch == 'b64'
    with_items:
    - -a always,exit -F arch=b64 -S openat -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access
    - -a always,exit -F arch=b64 -S openat -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access
-   lineinfile:
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the openat rule in /etc/audit/audit.rules when on x86
    tags:
    - audit_rules_unsuccessful_file_modification_openat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80387-4
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - DISA-STIG-RHEL-07-030520
    with_items:
    - -a always,exit -F arch=b32 -S openat -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access
    - -a always,exit -F arch=b32 -S openat -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access
-   lineinfile:
        create: true
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the openat rule in audit.rules when on x86_64
    tags:
    - audit_rules_unsuccessful_file_modification_openat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80387-4
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - DISA-STIG-RHEL-07-030520
    when: audit_arch == 'b64'
    with_items:
    - -a always,exit -F arch=b64 -S openat -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access
    - -a always,exit -F arch=b64 -S openat -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access
-   name: Set architecture for audit open_by_handle_at tasks
    set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
-   find:
        contains: -F key=perm_mod$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for other DAC audit rules
    register: find_open_by_handle_at
-   name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/access.rules
    when: find_open_by_handle_at.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_open_by_handle_at.files | map(attribute=''path'') | list | first }}'
    when: find_open_by_handle_at.matched > 0
-   lineinfile:
        create: true
        line: '{{ item }}'
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86
    tags:
    - audit_rules_unsuccessful_file_modification_open_by_handle_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80388-2
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - DISA-STIG-RHEL-07-030530
    with_items:
    - -a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access
    - -a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access
-   lineinfile:
        create: true
        line: '{{ item }}'
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86_64
    tags:
    - audit_rules_unsuccessful_file_modification_open_by_handle_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80388-2
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - DISA-STIG-RHEL-07-030530
    when: audit_arch == 'b64'
    with_items:
    - -a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access
    - -a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access
-   lineinfile:
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the open_by_handle_at rule in /etc/audit/audit.rules when on x86
    tags:
    - audit_rules_unsuccessful_file_modification_open_by_handle_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80388-2
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - DISA-STIG-RHEL-07-030530
    with_items:
    - -a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access
    - -a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access
-   lineinfile:
        create: true
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the open_by_handle_at rule in audit.rules when on x86_64
    tags:
    - audit_rules_unsuccessful_file_modification_open_by_handle_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80388-2
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - DISA-STIG-RHEL-07-030530
    when: audit_arch == 'b64'
    with_items:
    - -a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access
    - -a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access
-   name: Set architecture for audit open tasks
    set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
-   find:
        contains: -F key=perm_mod$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for other DAC audit rules
    register: find_open
-   name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/access.rules
    when: find_open.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_open.files | map(attribute=''path'') | list | first }}'
    when: find_open.matched > 0
-   lineinfile:
        create: true
        line: '{{ item }}'
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the open rule in rules.d when on x86
    tags:
    - audit_rules_unsuccessful_file_modification_open
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80386-6
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - DISA-STIG-RHEL-07-030510
    with_items:
    - -a always,exit -F arch=b32 -S open -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access
    - -a always,exit -F arch=b32 -S open -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access
-   lineinfile:
        create: true
        line: '{{ item }}'
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the open rule in rules.d when on x86_64
    tags:
    - audit_rules_unsuccessful_file_modification_open
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80386-6
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - DISA-STIG-RHEL-07-030510
    when: audit_arch == 'b64'
    with_items:
    - -a always,exit -F arch=b64 -S open -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access
    - -a always,exit -F arch=b64 -S open -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access
-   lineinfile:
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the open rule in /etc/audit/audit.rules when on x86
    tags:
    - audit_rules_unsuccessful_file_modification_open
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80386-6
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - DISA-STIG-RHEL-07-030510
    with_items:
    - -a always,exit -F arch=b32 -S open -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access
    - -a always,exit -F arch=b32 -S open -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access
-   lineinfile:
        create: true
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the open rule in audit.rules when on x86_64
    tags:
    - audit_rules_unsuccessful_file_modification_open
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80386-6
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - DISA-STIG-RHEL-07-030510
    when: audit_arch == 'b64'
    with_items:
    - -a always,exit -F arch=b64 -S open -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access
    - -a always,exit -F arch=b64 -S open -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access
-   name: Set architecture for audit ftruncate tasks
    set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
-   find:
        contains: -F key=perm_mod$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for other DAC audit rules
    register: find_ftruncate
-   name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/access.rules
    when: find_ftruncate.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_ftruncate.files | map(attribute=''path'') | list | first }}'
    when: find_ftruncate.matched > 0
-   lineinfile:
        create: true
        line: '{{ item }}'
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the ftruncate rule in rules.d when on x86
    tags:
    - audit_rules_unsuccessful_file_modification_ftruncate
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80390-8
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - DISA-STIG-RHEL-07-030550
    with_items:
    - -a always,exit -F arch=b32 -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access
    - -a always,exit -F arch=b32 -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access
-   lineinfile:
        create: true
        line: '{{ item }}'
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the ftruncate rule in rules.d when on x86_64
    tags:
    - audit_rules_unsuccessful_file_modification_ftruncate
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80390-8
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - DISA-STIG-RHEL-07-030550
    when: audit_arch == 'b64'
    with_items:
    - -a always,exit -F arch=b64 -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access
    - -a always,exit -F arch=b64 -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access
-   lineinfile:
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the ftruncate rule in /etc/audit/audit.rules when on x86
    tags:
    - audit_rules_unsuccessful_file_modification_ftruncate
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80390-8
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - DISA-STIG-RHEL-07-030550
    with_items:
    - -a always,exit -F arch=b32 -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access
    - -a always,exit -F arch=b32 -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access
-   lineinfile:
        create: true
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the ftruncate rule in audit.rules when on x86_64
    tags:
    - audit_rules_unsuccessful_file_modification_ftruncate
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80390-8
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - DISA-STIG-RHEL-07-030550
    when: audit_arch == 'b64'
    with_items:
    - -a always,exit -F arch=b64 -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access
    - -a always,exit -F arch=b64 -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access
-   name: Set architecture for audit creat tasks
    set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
-   find:
        contains: -F key=perm_mod$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for other DAC audit rules
    register: find_creat
-   name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/access.rules
    when: find_creat.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_creat.files | map(attribute=''path'') | list | first }}'
    when: find_creat.matched > 0
-   lineinfile:
        create: true
        line: '{{ item }}'
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the creat rule in rules.d when on x86
    tags:
    - audit_rules_unsuccessful_file_modification_creat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80385-8
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - DISA-STIG-RHEL-07-030500
    with_items:
    - -a always,exit -F arch=b32 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access
    - -a always,exit -F arch=b32 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access
-   lineinfile:
        create: true
        line: '{{ item }}'
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the creat rule in rules.d when on x86_64
    tags:
    - audit_rules_unsuccessful_file_modification_creat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80385-8
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - DISA-STIG-RHEL-07-030500
    when: audit_arch == 'b64'
    with_items:
    - -a always,exit -F arch=b64 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access
    - -a always,exit -F arch=b64 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access
-   lineinfile:
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the creat rule in /etc/audit/audit.rules when on x86
    tags:
    - audit_rules_unsuccessful_file_modification_creat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80385-8
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - DISA-STIG-RHEL-07-030500
    with_items:
    - -a always,exit -F arch=b32 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access
    - -a always,exit -F arch=b32 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access
-   lineinfile:
        create: true
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the creat rule in audit.rules when on x86_64
    tags:
    - audit_rules_unsuccessful_file_modification_creat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80385-8
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - DISA-STIG-RHEL-07-030500
    when: audit_arch == 'b64'
    with_items:
    - -a always,exit -F arch=b64 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access
    - -a always,exit -F arch=b64 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access
-   find:
        contains: ^.*path=/usr/sbin/userhelper.*$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for audit rule entries
    register: find_userhelper
-   name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/privileged.rules
    when: find_userhelper.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_userhelper.files | map(attribute=''path'') | list | first }}'
    when: find_userhelper.matched > 0
-   lineinfile:
        create: true
        line: -a always,exit -F path=/usr/sbin/userhelper -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the userhelper rule in rules.d
    tags:
    - audit_rules_privileged_commands_userhelper
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80399-9
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-171-3.1.7
    - DISA-STIG-RHEL-07-030670
-   lineinfile:
        create: true
        line: -a always,exit -F path=/usr/sbin/userhelper -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged
        path: /etc/audit/audit.rules
    name: Inserts/replaces the userhelper rule in audit.rules
    tags:
    - audit_rules_privileged_commands_userhelper
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80399-9
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-171-3.1.7
    - DISA-STIG-RHEL-07-030670
-   find:
        contains: ^.*path=/usr/sbin/unix_chkpwd.*$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for audit rule entries
    register: find_unix_chkpwd
-   name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/privileged.rules
    when: find_unix_chkpwd.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_unix_chkpwd.files | map(attribute=''path'') | list | first }}'
    when: find_unix_chkpwd.matched > 0
-   lineinfile:
        create: true
        line: -a always,exit -F path=/usr/sbin/unix_chkpwd -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the unix_chkpwd rule in rules.d
    tags:
    - audit_rules_privileged_commands_unix_chkpwd
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80396-5
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-171-3.1.7
    - DISA-STIG-RHEL-07-030640
-   lineinfile:
        create: true
        line: -a always,exit -F path=/usr/sbin/unix_chkpwd -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged
        path: /etc/audit/audit.rules
    name: Inserts/replaces the unix_chkpwd rule in audit.rules
    tags:
    - audit_rules_privileged_commands_unix_chkpwd
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80396-5
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-171-3.1.7
    - DISA-STIG-RHEL-07-030640
-   find:
        contains: ^.*path=/usr/bin/umount.*$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for audit rule entries
    register: find_umount
-   name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/privileged.rules
    when: find_umount.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_umount.files | map(attribute=''path'') | list | first }}'
    when: find_umount.matched > 0
-   lineinfile:
        create: true
        line: -a always,exit -F path=/usr/bin/umount -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the umount rule in rules.d
    tags:
    - audit_rules_privileged_commands_umount
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80405-4
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-171-3.1.7
    - DISA-STIG-RHEL-07-030750
-   lineinfile:
        create: true
        line: -a always,exit -F path=/usr/bin/umount -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged
        path: /etc/audit/audit.rules
    name: Inserts/replaces the umount rule in audit.rules
    tags:
    - audit_rules_privileged_commands_umount
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80405-4
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-171-3.1.7
    - DISA-STIG-RHEL-07-030750
-   find:
        contains: ^.*path=/usr/bin/sudoedit.*$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for audit rule entries
    register: find_sudoedit
-   name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/privileged.rules
    when: find_sudoedit.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_sudoedit.files | map(attribute=''path'') | list | first }}'
    when: find_sudoedit.matched > 0
-   lineinfile:
        create: true
        line: -a always,exit -F path=/usr/bin/sudoedit -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the sudoedit rule in rules.d
    tags:
    - audit_rules_privileged_commands_sudoedit
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80402-1
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-171-3.1.7
    - DISA-STIG-RHEL-07-030730
-   lineinfile:
        create: true
        line: -a always,exit -F path=/usr/bin/sudoedit -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged
        path: /etc/audit/audit.rules
    name: Inserts/replaces the sudoedit rule in audit.rules
    tags:
    - audit_rules_privileged_commands_sudoedit
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80402-1
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-171-3.1.7
    - DISA-STIG-RHEL-07-030730
-   find:
        contains: ^.*path=/usr/bin/sudo.*$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for audit rule entries
    register: find_sudo
-   name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/privileged.rules
    when: find_sudo.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_sudo.files | map(attribute=''path'') | list | first }}'
    when: find_sudo.matched > 0
-   lineinfile:
        create: true
        line: -a always,exit -F path=/usr/bin/sudo -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the sudo rule in rules.d
    tags:
    - audit_rules_privileged_commands_sudo
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80401-3
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-171-3.1.7
    - DISA-STIG-RHEL-07-030690
-   lineinfile:
        create: true
        line: -a always,exit -F path=/usr/bin/sudo -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged
        path: /etc/audit/audit.rules
    name: Inserts/replaces the sudo rule in audit.rules
    tags:
    - audit_rules_privileged_commands_sudo
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80401-3
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-171-3.1.7
    - DISA-STIG-RHEL-07-030690
-   find:
        contains: ^.*path=/usr/bin/su.*$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for audit rule entries
    register: find_su
-   name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/privileged.rules
    when: find_su.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_su.files | map(attribute=''path'') | list | first }}'
    when: find_su.matched > 0
-   lineinfile:
        create: true
        line: -a always,exit -F path=/usr/bin/su -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the su rule in rules.d
    tags:
    - audit_rules_privileged_commands_su
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80400-5
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-171-3.1.7
    - DISA-STIG-RHEL-07-030680
-   lineinfile:
        create: true
        line: -a always,exit -F path=/usr/bin/su -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged
        path: /etc/audit/audit.rules
    name: Inserts/replaces the su rule in audit.rules
    tags:
    - audit_rules_privileged_commands_su
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80400-5
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-171-3.1.7
    - DISA-STIG-RHEL-07-030680
-   find:
        contains: ^.*path=/usr/libexec/openssh/ssh-keysign.*$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for audit rule entries
    register: find_ssh_keysign
-   name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/privileged.rules
    when: find_ssh_keysign.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_ssh_keysign.files | map(attribute=''path'') | list | first }}'
    when: find_ssh_keysign.matched > 0
-   lineinfile:
        create: true
        line: -a always,exit -F path=/usr/libexec/openssh/ssh-keysign -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the ssh_keysign rule in rules.d
    tags:
    - audit_rules_privileged_commands_ssh_keysign
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80408-8
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-171-3.1.7
    - DISA-STIG-RHEL-07-030780
-   lineinfile:
        create: true
        line: -a always,exit -F path=/usr/libexec/openssh/ssh-keysign -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged
        path: /etc/audit/audit.rules
    name: Inserts/replaces the ssh_keysign rule in audit.rules
    tags:
    - audit_rules_privileged_commands_ssh_keysign
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80408-8
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-171-3.1.7
    - DISA-STIG-RHEL-07-030780
-   find:
        contains: ^.*path=/usr/sbin/postqueue.*$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for audit rule entries
    register: find_postqueue
-   name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/privileged.rules
    when: find_postqueue.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_postqueue.files | map(attribute=''path'') | list | first }}'
    when: find_postqueue.matched > 0
-   lineinfile:
        create: true
        line: -a always,exit -F path=/usr/sbin/postqueue -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the postqueue rule in rules.d
    tags:
    - audit_rules_privileged_commands_postqueue
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80407-0
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-171-3.1.7
    - DISA-STIG-RHEL-07-030770
-   lineinfile:
        create: true
        line: -a always,exit -F path=/usr/sbin/postqueue -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged
        path: /etc/audit/audit.rules
    name: Inserts/replaces the postqueue rule in audit.rules
    tags:
    - audit_rules_privileged_commands_postqueue
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80407-0
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-171-3.1.7
    - DISA-STIG-RHEL-07-030770
-   find:
        contains: ^.*path=/usr/sbin/postdrop.*$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for audit rule entries
    register: find_postdrop
-   name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/privileged.rules
    when: find_postdrop.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_postdrop.files | map(attribute=''path'') | list | first }}'
    when: find_postdrop.matched > 0
-   lineinfile:
        create: true
        line: -a always,exit -F path=/usr/sbin/postdrop -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the postdrop rule in rules.d
    tags:
    - audit_rules_privileged_commands_postdrop
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80406-2
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-171-3.1.7
    - DISA-STIG-RHEL-07-030760
-   lineinfile:
        create: true
        line: -a always,exit -F path=/usr/sbin/postdrop -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged
        path: /etc/audit/audit.rules
    name: Inserts/replaces the postdrop rule in audit.rules
    tags:
    - audit_rules_privileged_commands_postdrop
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80406-2
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-171-3.1.7
    - DISA-STIG-RHEL-07-030760
-   find:
        contains: ^.*path=/usr/bin/passwd.*$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for audit rule entries
    register: find_passwd
-   name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/privileged.rules
    when: find_passwd.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_passwd.files | map(attribute=''path'') | list | first }}'
    when: find_passwd.matched > 0
-   lineinfile:
        create: true
        line: -a always,exit -F path=/usr/bin/passwd -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the passwd rule in rules.d
    tags:
    - audit_rules_privileged_commands_passwd
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80395-7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-171-3.1.7
    - DISA-STIG-RHEL-07-030630
-   lineinfile:
        create: true
        line: -a always,exit -F path=/usr/bin/passwd -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged
        path: /etc/audit/audit.rules
    name: Inserts/replaces the passwd rule in audit.rules
    tags:
    - audit_rules_privileged_commands_passwd
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80395-7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-171-3.1.7
    - DISA-STIG-RHEL-07-030630
-   find:
        contains: ^.*path=/usr/sbin/pam_timestamp_check.*$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for audit rule entries
    register: find_pam_timestamp_check
-   name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/privileged.rules
    when: find_pam_timestamp_check.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_pam_timestamp_check.files | map(attribute=''path'') | list | first }}'
    when: find_pam_timestamp_check.matched > 0
-   lineinfile:
        create: true
        line: -a always,exit -F path=/usr/sbin/pam_timestamp_check -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the pam_timestamp_check rule in rules.d
    tags:
    - audit_rules_privileged_commands_pam_timestamp_check
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80411-2
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-171-3.1.7
    - DISA-STIG-RHEL-07-030810
-   lineinfile:
        create: true
        line: -a always,exit -F path=/usr/sbin/pam_timestamp_check -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged
        path: /etc/audit/audit.rules
    name: Inserts/replaces the pam_timestamp_check rule in audit.rules
    tags:
    - audit_rules_privileged_commands_pam_timestamp_check
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80411-2
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-171-3.1.7
    - DISA-STIG-RHEL-07-030810
-   find:
        contains: ^.*path=/usr/bin/newgrp.*$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for audit rule entries
    register: find_newgrp
-   name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/privileged.rules
    when: find_newgrp.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_newgrp.files | map(attribute=''path'') | list | first }}'
    when: find_newgrp.matched > 0
-   lineinfile:
        create: true
        line: -a always,exit -F path=/usr/bin/newgrp -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the newgrp rule in rules.d
    tags:
    - audit_rules_privileged_commands_newgrp
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80403-9
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-171-3.1.7
    - DISA-STIG-RHEL-07-030710
-   lineinfile:
        create: true
        line: -a always,exit -F path=/usr/bin/newgrp -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged
        path: /etc/audit/audit.rules
    name: Inserts/replaces the newgrp rule in audit.rules
    tags:
    - audit_rules_privileged_commands_newgrp
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80403-9
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-171-3.1.7
    - DISA-STIG-RHEL-07-030710
-   find:
        contains: ^.*path=/usr/bin/gpasswd.*$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for audit rule entries
    register: find_gpasswd
-   name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/privileged.rules
    when: find_gpasswd.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_gpasswd.files | map(attribute=''path'') | list | first }}'
    when: find_gpasswd.matched > 0
-   lineinfile:
        create: true
        line: -a always,exit -F path=/usr/bin/gpasswd -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the gpasswd rule in rules.d
    tags:
    - audit_rules_privileged_commands_gpasswd
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80397-3
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-171-3.1.7
    - DISA-STIG-RHEL-07-030650
-   lineinfile:
        create: true
        line: -a always,exit -F path=/usr/bin/gpasswd -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged
        path: /etc/audit/audit.rules
    name: Inserts/replaces the gpasswd rule in audit.rules
    tags:
    - audit_rules_privileged_commands_gpasswd
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80397-3
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-171-3.1.7
    - DISA-STIG-RHEL-07-030650
-   find:
        contains: ^.*path=/usr/bin/crontab.*$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for audit rule entries
    register: find_crontab
-   name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/privileged.rules
    when: find_crontab.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_crontab.files | map(attribute=''path'') | list | first }}'
    when: find_crontab.matched > 0
-   lineinfile:
        create: true
        line: -a always,exit -F path=/usr/bin/crontab -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the crontab rule in rules.d
    tags:
    - audit_rules_privileged_commands_crontab
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80410-4
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-171-3.1.7
    - DISA-STIG-RHEL-07-030800
-   lineinfile:
        create: true
        line: -a always,exit -F path=/usr/bin/crontab -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged
        path: /etc/audit/audit.rules
    name: Inserts/replaces the crontab rule in audit.rules
    tags:
    - audit_rules_privileged_commands_crontab
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80410-4
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-171-3.1.7
    - DISA-STIG-RHEL-07-030800
-   find:
        contains: ^.*path=/usr/bin/chsh.*$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for audit rule entries
    register: find_chsh
-   name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/privileged.rules
    when: find_chsh.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_chsh.files | map(attribute=''path'') | list | first }}'
    when: find_chsh.matched > 0
-   lineinfile:
        create: true
        line: -a always,exit -F path=/usr/bin/chsh -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the chsh rule in rules.d
    tags:
    - audit_rules_privileged_commands_chsh
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80404-7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-171-3.1.7
    - DISA-STIG-RHEL-07-030720
-   lineinfile:
        create: true
        line: -a always,exit -F path=/usr/bin/chsh -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged
        path: /etc/audit/audit.rules
    name: Inserts/replaces the chsh rule in audit.rules
    tags:
    - audit_rules_privileged_commands_chsh
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80404-7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-171-3.1.7
    - DISA-STIG-RHEL-07-030720
-   find:
        contains: ^.*path=/usr/bin/chage.*$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for audit rule entries
    register: find_chage
-   name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/privileged.rules
    when: find_chage.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_chage.files | map(attribute=''path'') | list | first }}'
    when: find_chage.matched > 0
-   lineinfile:
        create: true
        line: -a always,exit -F path=/usr/bin/chage -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the chage rule in rules.d
    tags:
    - audit_rules_privileged_commands_chage
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80398-1
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-171-3.1.7
    - DISA-STIG-RHEL-07-030660
-   lineinfile:
        create: true
        line: -a always,exit -F path=/usr/bin/chage -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged
        path: /etc/audit/audit.rules
    name: Inserts/replaces the chage rule in audit.rules
    tags:
    - audit_rules_privileged_commands_chage
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80398-1
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-171-3.1.7
    - DISA-STIG-RHEL-07-030660
-   name: Set architecture for audit tallylog tasks
    set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
-   find:
        contains: -k logins$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for other user/group modification audit rules
    register: find_tallylog
-   name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/logins.rules as the recipient for
        the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/logins.rules
    when: find_tallylog.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_tallylog.files | map(attribute=''path'') | list | first }}'
    when: find_tallylog.matched > 0
-   lineinfile:
        create: true
        line: -w /var/log/tallylog -p wa -k logins
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the tallylog rule in rules.d when on x86
    tags:
    - audit_rules_login_events_tallylog
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80382-5
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.2.3
    - DISA-STIG-RHEL-07-030600
-   lineinfile:
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the tallylog rule in /etc/audit/audit.rules
    tags:
    - audit_rules_login_events_tallylog
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80382-5
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.2.3
    - DISA-STIG-RHEL-07-030600
    with_items:
    - -w /var/log/tallylog -p wa -k logins
-   name: Set architecture for audit lastlog tasks
    set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
-   find:
        contains: -k logins$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for other user/group modification audit rules
    register: find_lastlog
-   name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/logins.rules as the recipient for
        the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/logins.rules
    when: find_lastlog.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_lastlog.files | map(attribute=''path'') | list | first }}'
    when: find_lastlog.matched > 0
-   lineinfile:
        create: true
        line: -w /var/log/lastlog -p wa -k logins
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the lastlog rule in rules.d when on x86
    tags:
    - audit_rules_login_events_lastlog
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80384-1
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.2.3
    - DISA-STIG-RHEL-07-030620
-   lineinfile:
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the lastlog rule in /etc/audit/audit.rules
    tags:
    - audit_rules_login_events_lastlog
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80384-1
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.2.3
    - DISA-STIG-RHEL-07-030620
    with_items:
    - -w /var/log/lastlog -p wa -k logins
-   name: Set architecture for audit faillock tasks
    set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
-   find:
        contains: -k logins$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for other user/group modification audit rules
    register: find_faillock
-   name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/logins.rules as the recipient for
        the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/logins.rules
    when: find_faillock.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_faillock.files | map(attribute=''path'') | list | first }}'
    when: find_faillock.matched > 0
-   lineinfile:
        create: true
        line: -w /var/run/faillock -p wa -k logins
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the faillock rule in rules.d when on x86
    tags:
    - audit_rules_login_events_faillock
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80383-3
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.2.3
    - DISA-STIG-RHEL-07-030610
-   lineinfile:
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the faillock rule in /etc/audit/audit.rules
    tags:
    - audit_rules_login_events_faillock
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80383-3
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.2.3
    - DISA-STIG-RHEL-07-030610
    with_items:
    - -w /var/run/faillock -p wa -k logins
-   find:
        contains: ^.*path=/usr/sbin/setsebool.*$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for audit rule entries
    register: find_setsebool
-   name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/privileged.rules
    when: find_setsebool.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_setsebool.files | map(attribute=''path'') | list | first }}'
    when: find_setsebool.matched > 0
-   lineinfile:
        create: true
        line: -a always,exit -F path=/usr/sbin/setsebool -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the setsebool rule in rules.d
    tags:
    - audit_rules_execution_setsebool
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80392-4
    - NIST-800-53-AU-12(c)
    - NIST-800-171-3.1.7
    - DISA-STIG-RHEL-07-030570
-   lineinfile:
        create: true
        line: -a always,exit -F path=/usr/sbin/setsebool -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged
        path: /etc/audit/audit.rules
    name: Inserts/replaces the setsebool rule in audit.rules
    tags:
    - audit_rules_execution_setsebool
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80392-4
    - NIST-800-53-AU-12(c)
    - NIST-800-171-3.1.7
    - DISA-STIG-RHEL-07-030570
-   find:
        contains: ^.*path=/usr/sbin/semanage.*$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for audit rule entries
    register: find_semanage
-   name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/privileged.rules
    when: find_semanage.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_semanage.files | map(attribute=''path'') | list | first }}'
    when: find_semanage.matched > 0
-   lineinfile:
        create: true
        line: -a always,exit -F path=/usr/sbin/semanage -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the semanage rule in rules.d
    tags:
    - audit_rules_execution_semanage
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80391-6
    - NIST-800-53-AU-12(c)
    - NIST-800-171-3.1.7
    - DISA-STIG-RHEL-07-030560
-   lineinfile:
        create: true
        line: -a always,exit -F path=/usr/sbin/semanage -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged
        path: /etc/audit/audit.rules
    name: Inserts/replaces the semanage rule in audit.rules
    tags:
    - audit_rules_execution_semanage
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80391-6
    - NIST-800-53-AU-12(c)
    - NIST-800-171-3.1.7
    - DISA-STIG-RHEL-07-030560
-   find:
        contains: ^.*path=/usr/sbin/restorecon.*$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for audit rule entries
    register: find_restorecon
-   name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/privileged.rules
    when: find_restorecon.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_restorecon.files | map(attribute=''path'') | list | first }}'
    when: find_restorecon.matched > 0
-   lineinfile:
        create: true
        line: -a always,exit -F path=/usr/sbin/restorecon -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the restorecon rule in rules.d
    tags:
    - audit_rules_execution_restorecon
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80394-0
    - NIST-800-53-AU-12(c)
    - NIST-800-171-3.1.7
-   lineinfile:
        create: true
        line: -a always,exit -F path=/usr/sbin/restorecon -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged
        path: /etc/audit/audit.rules
    name: Inserts/replaces the restorecon rule in audit.rules
    tags:
    - audit_rules_execution_restorecon
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80394-0
    - NIST-800-53-AU-12(c)
    - NIST-800-171-3.1.7
-   find:
        contains: ^.*path=/usr/bin/chcon.*$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for audit rule entries
    register: find_chcon
-   name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/privileged.rules
    when: find_chcon.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_chcon.files | map(attribute=''path'') | list | first }}'
    when: find_chcon.matched > 0
-   lineinfile:
        create: true
        line: -a always,exit -F path=/usr/bin/chcon -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the chcon rule in rules.d
    tags:
    - audit_rules_execution_chcon
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80393-2
    - NIST-800-53-AU-12(c)
    - NIST-800-171-3.1.7
    - DISA-STIG-RHEL-07-030580
-   lineinfile:
        create: true
        line: -a always,exit -F path=/usr/bin/chcon -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged
        path: /etc/audit/audit.rules
    name: Inserts/replaces the chcon rule in audit.rules
    tags:
    - audit_rules_execution_chcon
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80393-2
    - NIST-800-53-AU-12(c)
    - NIST-800-171-3.1.7
    - DISA-STIG-RHEL-07-030580
-   name: Set architecture for audit setxattr tasks
    set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
-   find:
        contains: -F key=perm_mod$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for other DAC audit rules
    register: find_setxattr
-   name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/privileged.rules
    when: find_setxattr.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_setxattr.files | map(attribute=''path'') | list | first }}'
    when: find_setxattr.matched > 0
-   lineinfile:
        create: true
        line: -a always,exit -F arch=b32 -S setxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the setxattr rule in rules.d when on x86
    tags:
    - audit_rules_dac_modification_setxattr
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27213-8
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030440
-   lineinfile:
        create: true
        line: -a always,exit -F arch=b64 -S setxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the setxattr rule in rules.d when on x86_64
    tags:
    - audit_rules_dac_modification_setxattr
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27213-8
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030440
    when: audit_arch == 'b64'
-   lineinfile:
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the setxattr rule in /etc/audit/audit.rules when on x86
    tags:
    - audit_rules_dac_modification_setxattr
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27213-8
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030440
    with_items:
    - -a always,exit -F arch=b32 -S setxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
-   lineinfile:
        create: true
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the setxattr rule in audit.rules when on x86_64
    tags:
    - audit_rules_dac_modification_setxattr
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27213-8
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030440
    when: audit_arch == 'b64'
    with_items:
    - -a always,exit -F arch=b64 -S setxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
-   name: Set architecture for audit removexattr tasks
    set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
-   find:
        contains: -F key=perm_mod$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for other DAC audit rules
    register: find_removexattr
-   name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/privileged.rules
    when: find_removexattr.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_removexattr.files | map(attribute=''path'') | list | first }}'
    when: find_removexattr.matched > 0
-   lineinfile:
        create: true
        line: -a always,exit -F arch=b32 -S removexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the removexattr rule in rules.d when on x86
    tags:
    - audit_rules_dac_modification_removexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27367-2
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030470
-   lineinfile:
        create: true
        line: -a always,exit -F arch=b64 -S removexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the removexattr rule in rules.d when on x86_64
    tags:
    - audit_rules_dac_modification_removexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27367-2
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030470
    when: audit_arch == 'b64'
-   lineinfile:
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the removexattr rule in /etc/audit/audit.rules when on x86
    tags:
    - audit_rules_dac_modification_removexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27367-2
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030470
    with_items:
    - -a always,exit -F arch=b32 -S removexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
-   lineinfile:
        create: true
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the removexattr rule in audit.rules when on x86_64
    tags:
    - audit_rules_dac_modification_removexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27367-2
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030470
    when: audit_arch == 'b64'
    with_items:
    - -a always,exit -F arch=b64 -S removexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
-   name: Set architecture for audit lsetxattr tasks
    set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
-   find:
        contains: -F key=perm_mod$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for other DAC audit rules
    register: find_lsetxattr
-   name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/privileged.rules
    when: find_lsetxattr.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_lsetxattr.files | map(attribute=''path'') | list | first }}'
    when: find_lsetxattr.matched > 0
-   lineinfile:
        create: true
        line: -a always,exit -F arch=b32 -S lsetxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the lsetxattr rule in rules.d when on x86
    tags:
    - audit_rules_dac_modification_lsetxattr
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27280-7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030460
-   lineinfile:
        create: true
        line: -a always,exit -F arch=b64 -S lsetxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the lsetxattr rule in rules.d when on x86_64
    tags:
    - audit_rules_dac_modification_lsetxattr
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27280-7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030460
    when: audit_arch == 'b64'
-   lineinfile:
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the lsetxattr rule in /etc/audit/audit.rules when on x86
    tags:
    - audit_rules_dac_modification_lsetxattr
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27280-7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030460
    with_items:
    - -a always,exit -F arch=b32 -S lsetxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
-   lineinfile:
        create: true
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the lsetxattr rule in audit.rules when on x86_64
    tags:
    - audit_rules_dac_modification_lsetxattr
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27280-7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030460
    when: audit_arch == 'b64'
    with_items:
    - -a always,exit -F arch=b64 -S lsetxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
-   name: Set architecture for audit lremovexattr tasks
    set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
-   find:
        contains: -F key=perm_mod$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for other DAC audit rules
    register: find_lremovexattr
-   name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/privileged.rules
    when: find_lremovexattr.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_lremovexattr.files | map(attribute=''path'') | list | first }}'
    when: find_lremovexattr.matched > 0
-   lineinfile:
        create: true
        line: -a always,exit -F arch=b32 -S lremovexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the lremovexattr rule in rules.d when on x86
    tags:
    - audit_rules_dac_modification_lremovexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27410-0
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030490
-   lineinfile:
        create: true
        line: -a always,exit -F arch=b64 -S lremovexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the lremovexattr rule in rules.d when on x86_64
    tags:
    - audit_rules_dac_modification_lremovexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27410-0
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030490
    when: audit_arch == 'b64'
-   lineinfile:
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the lremovexattr rule in /etc/audit/audit.rules when on x86
    tags:
    - audit_rules_dac_modification_lremovexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27410-0
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030490
    with_items:
    - -a always,exit -F arch=b32 -S lremovexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
-   lineinfile:
        create: true
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the lremovexattr rule in audit.rules when on x86_64
    tags:
    - audit_rules_dac_modification_lremovexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27410-0
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030490
    when: audit_arch == 'b64'
    with_items:
    - -a always,exit -F arch=b64 -S lremovexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
-   name: Set architecture for audit lchown tasks
    set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
-   find:
        contains: -F key=perm_mod$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for other DAC audit rules
    register: find_lchown
-   name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/privileged.rules
    when: find_lchown.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_lchown.files | map(attribute=''path'') | list | first }}'
    when: find_lchown.matched > 0
-   lineinfile:
        create: true
        line: -a always,exit -F arch=b32 -S lchown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the lchown rule in rules.d when on x86
    tags:
    - audit_rules_dac_modification_lchown
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27083-5
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030390
-   lineinfile:
        create: true
        line: -a always,exit -F arch=b64 -S lchown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the lchown rule in rules.d when on x86_64
    tags:
    - audit_rules_dac_modification_lchown
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27083-5
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030390
    when: audit_arch == 'b64'
-   lineinfile:
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the lchown rule in /etc/audit/audit.rules when on x86
    tags:
    - audit_rules_dac_modification_lchown
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27083-5
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030390
    with_items:
    - -a always,exit -F arch=b32 -S lchown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
-   lineinfile:
        create: true
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the lchown rule in audit.rules when on x86_64
    tags:
    - audit_rules_dac_modification_lchown
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27083-5
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030390
    when: audit_arch == 'b64'
    with_items:
    - -a always,exit -F arch=b64 -S lchown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
-   name: Set architecture for audit fsetxattr tasks
    set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
-   find:
        contains: -F key=perm_mod$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for other DAC audit rules
    register: find_fsetxattr
-   name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/privileged.rules
    when: find_fsetxattr.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_fsetxattr.files | map(attribute=''path'') | list | first }}'
    when: find_fsetxattr.matched > 0
-   lineinfile:
        create: true
        line: -a always,exit -F arch=b32 -S fsetxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the fsetxattr rule in rules.d when on x86
    tags:
    - audit_rules_dac_modification_fsetxattr
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27389-6
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030450
-   lineinfile:
        create: true
        line: -a always,exit -F arch=b64 -S fsetxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the fsetxattr rule in rules.d when on x86_64
    tags:
    - audit_rules_dac_modification_fsetxattr
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27389-6
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030450
    when: audit_arch == 'b64'
-   lineinfile:
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the fsetxattr rule in /etc/audit/audit.rules when on x86
    tags:
    - audit_rules_dac_modification_fsetxattr
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27389-6
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030450
    with_items:
    - -a always,exit -F arch=b32 -S fsetxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
-   lineinfile:
        create: true
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the fsetxattr rule in audit.rules when on x86_64
    tags:
    - audit_rules_dac_modification_fsetxattr
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27389-6
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030450
    when: audit_arch == 'b64'
    with_items:
    - -a always,exit -F arch=b64 -S fsetxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
-   name: Set architecture for audit fremovexattr tasks
    set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
-   find:
        contains: -F key=perm_mod$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for other DAC audit rules
    register: find_fremovexattr
-   name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/privileged.rules
    when: find_fremovexattr.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_fremovexattr.files | map(attribute=''path'') | list | first }}'
    when: find_fremovexattr.matched > 0
-   lineinfile:
        create: true
        line: -a always,exit -F arch=b32 -S fremovexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the fremovexattr rule in rules.d when on x86
    tags:
    - audit_rules_dac_modification_fremovexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27353-2
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030480
-   lineinfile:
        create: true
        line: -a always,exit -F arch=b64 -S fremovexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the fremovexattr rule in rules.d when on x86_64
    tags:
    - audit_rules_dac_modification_fremovexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27353-2
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030480
    when: audit_arch == 'b64'
-   lineinfile:
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the fremovexattr rule in /etc/audit/audit.rules when on x86
    tags:
    - audit_rules_dac_modification_fremovexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27353-2
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030480
    with_items:
    - -a always,exit -F arch=b32 -S fremovexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
-   lineinfile:
        create: true
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the fremovexattr rule in audit.rules when on x86_64
    tags:
    - audit_rules_dac_modification_fremovexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27353-2
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030480
    when: audit_arch == 'b64'
    with_items:
    - -a always,exit -F arch=b64 -S fremovexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
-   name: Set architecture for audit fchownat tasks
    set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
-   find:
        contains: -F key=perm_mod$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for other DAC audit rules
    register: find_fchownat
-   name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/privileged.rules
    when: find_fchownat.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_fchownat.files | map(attribute=''path'') | list | first }}'
    when: find_fchownat.matched > 0
-   lineinfile:
        create: true
        line: -a always,exit -F arch=b32 -S fchownat -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the fchownat rule in rules.d when on x86
    tags:
    - audit_rules_dac_modification_fchownat
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27387-0
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030400
-   lineinfile:
        create: true
        line: -a always,exit -F arch=b64 -S fchownat -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the fchownat rule in rules.d when on x86_64
    tags:
    - audit_rules_dac_modification_fchownat
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27387-0
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030400
    when: audit_arch == 'b64'
-   lineinfile:
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the fchownat rule in /etc/audit/audit.rules when on x86
    tags:
    - audit_rules_dac_modification_fchownat
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27387-0
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030400
    with_items:
    - -a always,exit -F arch=b32 -S fchownat -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
-   lineinfile:
        create: true
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the fchownat rule in audit.rules when on x86_64
    tags:
    - audit_rules_dac_modification_fchownat
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27387-0
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030400
    when: audit_arch == 'b64'
    with_items:
    - -a always,exit -F arch=b64 -S fchownat -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
-   name: Set architecture for audit fchown tasks
    set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
-   find:
        contains: -F key=perm_mod$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for other DAC audit rules
    register: find_fchown
-   name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/privileged.rules
    when: find_fchown.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_fchown.files | map(attribute=''path'') | list | first }}'
    when: find_fchown.matched > 0
-   lineinfile:
        create: true
        line: -a always,exit -F arch=b32 -S fchown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the fchown rule in rules.d when on x86
    tags:
    - audit_rules_dac_modification_fchown
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27356-5
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030380
-   lineinfile:
        create: true
        line: -a always,exit -F arch=b64 -S fchown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the fchown rule in rules.d when on x86_64
    tags:
    - audit_rules_dac_modification_fchown
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27356-5
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030380
    when: audit_arch == 'b64'
-   lineinfile:
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the fchown rule in /etc/audit/audit.rules when on x86
    tags:
    - audit_rules_dac_modification_fchown
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27356-5
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030380
    with_items:
    - -a always,exit -F arch=b32 -S fchown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
-   lineinfile:
        create: true
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the fchown rule in audit.rules when on x86_64
    tags:
    - audit_rules_dac_modification_fchown
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27356-5
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030380
    when: audit_arch == 'b64'
    with_items:
    - -a always,exit -F arch=b64 -S fchown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
-   name: Set architecture for audit fchmodat tasks
    set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
-   find:
        contains: -F key=perm_mod$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for other DAC audit rules
    register: find_fchmodat
-   name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/privileged.rules
    when: find_fchmodat.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_fchmodat.files | map(attribute=''path'') | list | first }}'
    when: find_fchmodat.matched > 0
-   lineinfile:
        create: true
        line: -a always,exit -F arch=b32 -S fchmodat -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the fchmodat rule in rules.d when on x86
    tags:
    - audit_rules_dac_modification_fchmodat
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27388-8
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030430
-   lineinfile:
        create: true
        line: -a always,exit -F arch=b64 -S fchmodat -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the fchmodat rule in rules.d when on x86_64
    tags:
    - audit_rules_dac_modification_fchmodat
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27388-8
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030430
    when: audit_arch == 'b64'
-   lineinfile:
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the fchmodat rule in /etc/audit/audit.rules when on x86
    tags:
    - audit_rules_dac_modification_fchmodat
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27388-8
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030430
    with_items:
    - -a always,exit -F arch=b32 -S fchmodat -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
-   lineinfile:
        create: true
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the fchmodat rule in audit.rules when on x86_64
    tags:
    - audit_rules_dac_modification_fchmodat
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27388-8
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030430
    when: audit_arch == 'b64'
    with_items:
    - -a always,exit -F arch=b64 -S fchmodat -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
-   name: Set architecture for audit fchmod tasks
    set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
-   find:
        contains: -F key=perm_mod$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for other DAC audit rules
    register: find_fchmod
-   name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/privileged.rules
    when: find_fchmod.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_fchmod.files | map(attribute=''path'') | list | first }}'
    when: find_fchmod.matched > 0
-   lineinfile:
        create: true
        line: -a always,exit -F arch=b32 -S fchmod -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the fchmod rule in rules.d when on x86
    tags:
    - audit_rules_dac_modification_fchmod
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27393-8
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030420
-   lineinfile:
        create: true
        line: -a always,exit -F arch=b64 -S fchmod -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the fchmod rule in rules.d when on x86_64
    tags:
    - audit_rules_dac_modification_fchmod
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27393-8
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030420
    when: audit_arch == 'b64'
-   lineinfile:
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the fchmod rule in /etc/audit/audit.rules when on x86
    tags:
    - audit_rules_dac_modification_fchmod
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27393-8
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030420
    with_items:
    - -a always,exit -F arch=b32 -S fchmod -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
-   lineinfile:
        create: true
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the fchmod rule in audit.rules when on x86_64
    tags:
    - audit_rules_dac_modification_fchmod
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27393-8
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030420
    when: audit_arch == 'b64'
    with_items:
    - -a always,exit -F arch=b64 -S fchmod -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
-   name: Set architecture for audit chown tasks
    set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
-   find:
        contains: -F key=perm_mod$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for other DAC audit rules
    register: find_chown
-   name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/privileged.rules
    when: find_chown.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_chown.files | map(attribute=''path'') | list | first }}'
    when: find_chown.matched > 0
-   lineinfile:
        create: true
        line: -a always,exit -F arch=b32 -S chown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the chown rule in rules.d when on x86
    tags:
    - audit_rules_dac_modification_chown
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27364-9
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030370
-   lineinfile:
        create: true
        line: -a always,exit -F arch=b64 -S chown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the chown rule in rules.d when on x86_64
    tags:
    - audit_rules_dac_modification_chown
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27364-9
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030370
    when: audit_arch == 'b64'
-   lineinfile:
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the chown rule in /etc/audit/audit.rules when on x86
    tags:
    - audit_rules_dac_modification_chown
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27364-9
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030370
    with_items:
    - -a always,exit -F arch=b32 -S chown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
-   lineinfile:
        create: true
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the chown rule in audit.rules when on x86_64
    tags:
    - audit_rules_dac_modification_chown
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27364-9
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030370
    when: audit_arch == 'b64'
    with_items:
    - -a always,exit -F arch=b64 -S chown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
-   name: Set architecture for audit chmod tasks
    set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
-   find:
        contains: -F key=perm_mod$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for other DAC audit rules
    register: find_chmod
-   name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/privileged.rules
    when: find_chmod.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_chmod.files | map(attribute=''path'') | list | first }}'
    when: find_chmod.matched > 0
-   lineinfile:
        create: true
        line: -a always,exit -F arch=b32 -S chmod -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the chmod rule in rules.d when on x86
    tags:
    - audit_rules_dac_modification_chmod
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27339-1
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030410
-   lineinfile:
        create: true
        line: -a always,exit -F arch=b64 -S chmod -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the chmod rule in rules.d when on x86_64
    tags:
    - audit_rules_dac_modification_chmod
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27339-1
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030410
    when: audit_arch == 'b64'
-   lineinfile:
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the chmod rule in /etc/audit/audit.rules when on x86
    tags:
    - audit_rules_dac_modification_chmod
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27339-1
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030410
    with_items:
    - -a always,exit -F arch=b32 -S chmod -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
-   lineinfile:
        create: true
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the chmod rule in audit.rules when on x86_64
    tags:
    - audit_rules_dac_modification_chmod
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27339-1
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.5.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030410
    when: audit_arch == 'b64'
    with_items:
    - -a always,exit -F arch=b64 -S chmod -F auid>=1000 -F auid!=4294967295 -F key=perm_mod
-   name: Set architecture for audit shadow tasks
    set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
-   find:
        contains: -k audit_rules_usergroup_modification$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for other user/group modification audit rules
    register: find_shadow
-   name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient
        for the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/privileged.rules
    when: find_shadow.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_shadow.files | map(attribute=''path'') | list | first }}'
    when: find_shadow.matched > 0
-   lineinfile:
        create: true
        line: -w /etc/shadow -p wa -k audit_rules_usergroup_modification
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the shadow rule in rules.d when on x86
    tags:
    - audit_rules_usergroup_modification_shadow
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80431-0
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.2.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030873
-   lineinfile:
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the shadow rule in /etc/audit/audit.rules
    tags:
    - audit_rules_usergroup_modification_shadow
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80431-0
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.2.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030873
    with_items:
    - -w /etc/shadow -p wa -k audit_rules_usergroup_modification
-   name: Set architecture for audit passwd tasks
    set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
-   find:
        contains: -k audit_rules_usergroup_modification$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for other user/group modification audit rules
    register: find_passwd
-   name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient
        for the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/privileged.rules
    when: find_passwd.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_passwd.files | map(attribute=''path'') | list | first }}'
    when: find_passwd.matched > 0
-   lineinfile:
        create: true
        line: -w /etc/passwd -p wa -k audit_rules_usergroup_modification
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the passwd rule in rules.d when on x86
    tags:
    - audit_rules_usergroup_modification_passwd
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80435-1
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.2.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030870
-   lineinfile:
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the passwd rule in /etc/audit/audit.rules
    tags:
    - audit_rules_usergroup_modification_passwd
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80435-1
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.2.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030870
    with_items:
    - -w /etc/passwd -p wa -k audit_rules_usergroup_modification
-   name: Set architecture for audit opasswd tasks
    set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
-   find:
        contains: -k audit_rules_usergroup_modification$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for other user/group modification audit rules
    register: find_opasswd
-   name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient
        for the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/privileged.rules
    when: find_opasswd.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_opasswd.files | map(attribute=''path'') | list | first }}'
    when: find_opasswd.matched > 0
-   lineinfile:
        create: true
        line: -w /etc/security/opasswd -p wa -k audit_rules_usergroup_modification
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the opasswd rule in rules.d when on x86
    tags:
    - audit_rules_usergroup_modification_opasswd
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80430-2
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.2.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030874
-   lineinfile:
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the opasswd rule in /etc/audit/audit.rules
    tags:
    - audit_rules_usergroup_modification_opasswd
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80430-2
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.2.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030874
    with_items:
    - -w /etc/security/opasswd -p wa -k audit_rules_usergroup_modification
-   name: Set architecture for audit gshadow tasks
    set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
-   find:
        contains: -k audit_rules_usergroup_modification$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for other user/group modification audit rules
    register: find_gshadow
-   name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient
        for the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/privileged.rules
    when: find_gshadow.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_gshadow.files | map(attribute=''path'') | list | first }}'
    when: find_gshadow.matched > 0
-   lineinfile:
        create: true
        line: -w /etc/gshadow -p wa -k audit_rules_usergroup_modification
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the gshadow rule in rules.d when on x86
    tags:
    - audit_rules_usergroup_modification_gshadow
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80432-8
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.2.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030872
-   lineinfile:
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the gshadow rule in /etc/audit/audit.rules
    tags:
    - audit_rules_usergroup_modification_gshadow
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80432-8
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.2.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030872
    with_items:
    - -w /etc/gshadow -p wa -k audit_rules_usergroup_modification
-   name: Set architecture for audit group tasks
    set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
-   find:
        contains: -k audit_rules_usergroup_modification$
        paths: /etc/audit/rules.d
        patterns: '*.rules'
        recurse: false
    name: Search /etc/audit/rules.d for other user/group modification audit rules
    register: find_group
-   name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient
        for the rule
    set_fact:
        all_files:
        - /etc/audit/rules.d/privileged.rules
    when: find_group.matched == 0
-   name: Use matched file as the recipient for the rule
    set_fact:
        all_files:
        - '{{ find_group.files | map(attribute=''path'') | list | first }}'
    when: find_group.matched > 0
-   lineinfile:
        create: true
        line: -w /etc/group -p wa -k audit_rules_usergroup_modification
        path: '{{ all_files[0] }}'
    name: Inserts/replaces the group rule in rules.d when on x86
    tags:
    - audit_rules_usergroup_modification_group
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80433-6
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.2.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030871
-   lineinfile:
        dest: /etc/audit/audit.rules
        line: '{{ item }}'
        state: present
    name: Inserts/replaces the group rule in /etc/audit/audit.rules
    tags:
    - audit_rules_usergroup_modification_group
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80433-6
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-171-3.1.7
    - PCI-DSS-Req-10.2.5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030871
    with_items:
    - -w /etc/group -p wa -k audit_rules_usergroup_modification
-   name: Enable service auditd
    service:
        enabled: 'yes'
        name: '{{item}}'
        state: started
    tags:
    - service_auditd_enabled
    - high_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - CCE-27407-6
    - NIST-800-53-AU-3
    - NIST-800-53-AC-17(1)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-10
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AU-14(1)
    - NIST-800-53-IR-5
    - NIST-800-171-3.3.1
    - NIST-800-171-3.3.2
    - NIST-800-171-3.3.6
    - PCI-DSS-Req-10
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030000
    with_items:
    - auditd
-   lineinfile:
        dest: /etc/securetty
        regexp: ^vc
        state: absent
    name: Restrict Virtual Console Root Logins
    tags:
    - securetty_root_login_console_only
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27318-5
    - NIST-800-53-AC-6(2)
    - NIST-800-171-3.1.1
    - NIST-800-171-3.1.5
-   lineinfile:
        dest: /etc/securetty
        regexp: ttyS[0-9]
        state: absent
    name: Restrict Serial Port Root Logins
    tags:
    - restrict_serial_port_logins
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27268-2
    - NIST-800-53-AC-6(2)
    - NIST-800-171-3.1.1
    - NIST-800-171-3.1.5
-   name: Direct root Logins Not Allowed
    shell: echo > /etc/securetty
    tags:
    - no_direct_root_logins
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27294-8
    - NIST-800-53-IA-2(1)
    - NIST-800-171-3.1.1
    - NIST-800-171-3.1.6
-   name: Prevent Log In to Accounts With Empty Password - system-auth
    replace:
        dest: /etc/pam.d/system-auth
        follow: true
        regexp: nullok
    tags:
    - no_empty_passwords
    - high_severity
    - configure_strategy
    - low_complexity
    - medium_disruption
    - CCE-27286-4
    - NIST-800-53-AC-6
    - NIST-800-53-IA-5(b)
    - NIST-800-53-IA-5(c)
    - NIST-800-53-IA-5(1)(a)
    - NIST-800-171-3.1.1
    - NIST-800-171-3.1.5
    - PCI-DSS-Req-8.2.3
    - CJIS-5.5.2
    - DISA-STIG-RHEL-07-010290
-   name: Prevent Log In to Accounts With Empty Password - password-auth
    replace:
        dest: /etc/pam.d/password-auth
        follow: true
        regexp: nullok
    tags:
    - no_empty_passwords
    - high_severity
    - configure_strategy
    - low_complexity
    - medium_disruption
    - CCE-27286-4
    - NIST-800-53-AC-6
    - NIST-800-53-IA-5(b)
    - NIST-800-53-IA-5(c)
    - NIST-800-53-IA-5(1)(a)
    - NIST-800-171-3.1.1
    - NIST-800-171-3.1.5
    - PCI-DSS-Req-8.2.3
    - CJIS-5.5.2
    - DISA-STIG-RHEL-07-010290
-   failed_when: service_result is failed and ('Could not find the requested service' not in service_result.msg)
    name: Disable service debug-shell
    register: service_result
    service:
        enabled: 'no'
        name: '{{item}}'
        state: stopped
    tags:
    - service_debug-shell_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - CCE-80206-6
    - NIST-800-171-3.4.5
    with_items:
    - debug-shell
-   failed_when: socket_result is failed and ('Could not find the requested service' not in socket_result.msg)
    name: Disable socket of service debug-shell if applicable
    register: socket_result
    service:
        enabled: 'no'
        name: '{{item}}'
        state: stopped
    tags:
    - service_debug-shell_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - CCE-80206-6
    - NIST-800-171-3.4.5
    with_items:
    - debug-shell.socket
-   lineinfile:
        create: true
        dest: /etc/ssh/sshd_config
        line: UsePrivilegeSeparation sandbox
        regexp: (?i)^#?useprivilegeseparation
        validate: sshd -t -f %s
    name: Enable use of Privilege Separation
    tags:
    - sshd_use_priv_separation
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80223-1
    - NIST-800-53-AC-6
    - NIST-800-171-3.1.12
    - DISA-STIG-RHEL-07-040460
-   name: XCCDF Value sshd_approved_macs
    set_fact:
        sshd_approved_macs: hmac-sha2-512,hmac-sha2-256,hmac-sha1,hmac-sha1-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com
    tags:
    - always
-   lineinfile:
        create: true
        dest: /etc/ssh/sshd_config
        line: MACs {{ sshd_approved_macs }}
        regexp: ^MACs
        validate: sshd -t -f %s
    name: Use Only Approved MACs
    tags:
    - sshd_use_approved_macs
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27455-5
    - NIST-800-53-AC-17(2)
    - NIST-800-53-IA-7
    - NIST-800-53-SC-13
    - NIST-800-171-3.1.13
    - NIST-800-171-3.13.11
    - NIST-800-171-3.13.8
    - DISA-STIG-RHEL-07-040400
-   lineinfile:
        create: true
        dest: /etc/ssh/sshd_config
        line: Ciphers aes128-ctr,aes192-ctr,aes256-ctr,aes128-cbc,3des-cbc,aes192-cbc,aes256-cbc
        regexp: ^Ciphers
        validate: sshd -t -f %s
    name: Use Only Approved Ciphers
    tags:
    - sshd_use_approved_ciphers
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27295-5
    - NIST-800-53-AC-3
    - NIST-800-53-AC-17(2)
    - NIST-800-53-AU-10(5)
    - NIST-800-53-CM-6(b)
    - NIST-800-53-IA-5(1)(c)
    - NIST-800-53-IA-7
    - NIST-800-171-3.1.13
    - NIST-800-171-3.13.11
    - NIST-800-171-3.13.8
    - CJIS-5.5.6
    - DISA-STIG-RHEL-07-040110
-   lineinfile:
        create: true
        dest: /etc/ssh/sshd_config
        line: ClientAliveCountMax 0
        regexp: ^ClientAliveCountMax
        validate: sshd -t -f %s
    name: Set SSH Client Alive Count
    tags:
    - sshd_set_keepalive
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27082-7
    - NIST-800-53-AC-2(5)
    - NIST-800-53-SA-8
    - NIST-800-53-AC-12
    - NIST-800-171-3.1.11
    - CJIS-5.5.6
    - DISA-STIG-RHEL-07-040340
-   lineinfile:
        create: true
        dest: /etc/ssh/sshd_config
        line: Banner /etc/issue
        regexp: ^Banner
        validate: sshd -t -f %s
    name: Enable SSH Warning Banner
    tags:
    - sshd_enable_warning_banner
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27314-4
    - NIST-800-53-AC-8(a)
    - NIST-800-53-AC-8(b)
    - NIST-800-53-AC-8(c)(1)
    - NIST-800-53-AC-8(c)(2)
    - NIST-800-53-AC-8(c)(3)
    - NIST-800-171-3.1.9
    - CJIS-5.5.6
    - DISA-STIG-RHEL-07-040170
-   lineinfile:
        create: true
        dest: /etc/ssh/sshd_config
        line: StrictModes yes
        regexp: (?i)^#?strictmodes
        validate: sshd -t -f %s
    name: Enable Use of Strict Mode Checking
    tags:
    - sshd_enable_strictmodes
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80222-3
    - NIST-800-53-AC-6
    - NIST-800-171-3.1.12
    - DISA-STIG-RHEL-07-040450
-   lineinfile:
        create: true
        dest: /etc/ssh/sshd_config
        line: PermitUserEnvironment no
        regexp: ^PermitUserEnvironment
        validate: sshd -t -f %s
    name: Do Not Allow SSH Environment Options
    tags:
    - sshd_do_not_permit_user_env
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27363-1
    - NIST-800-53-CM-6(b)
    - NIST-800-171-3.1.12
    - CJIS-5.5.6
    - DISA-STIG-RHEL-07-010460
-   lineinfile:
        create: true
        dest: /etc/ssh/sshd_config
        line: IgnoreUserKnownHosts yes
        regexp: ^IgnoreUserKnownHosts
        validate: sshd -t -f %s
    name: Disable SSH Support for User Known Hosts
    tags:
    - sshd_disable_user_known_hosts
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80372-6
    - NIST-800-53-CM-6(a)
    - NIST-800-171-3.1.12
    - DISA-STIG-RHEL-07-040380
-   lineinfile:
        create: true
        dest: /etc/ssh/sshd_config
        insertafter: (?i)^#?authentication
        line: PermitRootLogin no
        regexp: ^PermitRootLogin
        validate: sshd -t -f %s
    name: Disable SSH Root Login
    tags:
    - sshd_disable_root_login
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27445-6
    - NIST-800-53-AC-3
    - NIST-800-53-AC-6(2)
    - NIST-800-53-IA-2(1)
    - NIST-800-53-IA-2(5)
    - NIST-800-171-3.1.1
    - NIST-800-171-3.1.5
    - CJIS-5.5.6
    - DISA-STIG-RHEL-07-040370
-   lineinfile:
        create: true
        dest: /etc/ssh/sshd_config
        line: RhostsRSAAuthentication no
        regexp: ^RhostsRSAAuthentication
        validate: sshd -t -f %s
    name: Disable SSH Support for Rhosts RSA Authentication
    tags:
    - sshd_disable_rhosts_rsa
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80373-4
    - NIST-800-53-CM-6(a)
    - NIST-800-171-3.1.12
    - DISA-STIG-RHEL-07-040330
-   lineinfile:
        create: true
        dest: /etc/ssh/sshd_config
        line: IgnoreRhosts yes
        regexp: ^IgnoreRhosts
        validate: sshd -t -f %s
    name: Disable SSH Support for .rhosts Files
    tags:
    - sshd_disable_rhosts
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27377-1
    - NIST-800-53-AC-3
    - NIST-800-53-CM-6(a)
    - NIST-800-171-3.1.12
    - CJIS-5.5.6
    - DISA-STIG-RHEL-07-040350
-   lineinfile:
        create: true
        dest: /etc/ssh/sshd_config
        line: KerberosAuthentication no
        regexp: (?i)^#?kerberosauthentication
        validate: sshd -t -f %s
    name: Disable Kerberos Authentication
    tags:
    - sshd_disable_kerb_auth
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80221-5
    - NIST-800-53-CM-6(c)
    - NIST-800-171-3.1.12
    - DISA-STIG-RHEL-07-040440
-   lineinfile:
        create: true
        dest: /etc/ssh/sshd_config
        line: GSSAPIAuthentication no
        regexp: (?i)^#?gssapiauthentication
        validate: sshd -t -f %s
    name: Disable GSSAPI Authentication
    tags:
    - sshd_disable_gssapi_auth
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80220-7
    - NIST-800-53-CM-6(c)
    - NIST-800-171-3.1.12
    - DISA-STIG-RHEL-07-040430
-   lineinfile:
        create: true
        dest: /etc/ssh/sshd_config
        line: PermitEmptyPasswords no
        regexp: ^PermitEmptyPasswords
        validate: sshd -t -f %s
    name: Disable SSH Access via Empty Passwords
    tags:
    - sshd_disable_empty_passwords
    - high_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27471-2
    - NIST-800-53-AC-3
    - NIST-800-53-AC-6
    - NIST-800-53-CM-6(b)
    - NIST-800-171-3.1.1
    - NIST-800-171-3.1.5
    - CJIS-5.5.6
    - DISA-STIG-RHEL-07-010300
-   lineinfile:
        create: true
        dest: /etc/ssh/sshd_config
        line: Compression delayed
        regexp: (?i)^#?compression
        validate: sshd -t -f %s
    name: Disable Compression or Set Compression to delayed
    tags:
    - sshd_disable_compression
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-80224-9
    - NIST-800-53-CM-6(b)
    - NIST-800-171-3.1.12
    - DISA-STIG-RHEL-07-040470
-   lineinfile:
        dest: /etc/ssh/sshd_config
        line: Protocol 2
        regexp: ^Protocol [0-9]
        validate: sshd -t -f %s
    name: Allow Only SSH Protocol 2
    tags:
    - sshd_allow_only_protocol2
    - high_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27320-1
    - NIST-800-53-AC-17(8).1(ii)
    - NIST-800-53-IA-5(1)(c)
    - NIST-800-171-3.1.13
    - NIST-800-171-3.5.4
    - CJIS-5.5.6
    - DISA-STIG-RHEL-07-040390
-   lineinfile:
        create: true
        dest: /etc/ssh/sshd_config
        line: HostbasedAuthentication no
        regexp: ^HostbasedAuthentication
    name: Disable Host-Based Authentication
    tags:
    - disable_host_auth
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27413-4
    - NIST-800-53-AC-3
    - NIST-800-53-CM-6(b)
    - NIST-800-171-3.1.12
    - CJIS-5.5.6
    - DISA-STIG-RHEL-07-010470
-   failed_when: service_result is failed and ('Could not find the requested service' not in service_result.msg)
    name: Disable service zebra
    register: service_result
    service:
        enabled: 'no'
        name: '{{item}}'
        state: stopped
    tags:
    - service_zebra_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - CCE-27191-6
    - NIST-800-53-SC-32
    with_items:
    - zebra
-   failed_when: socket_result is failed and ('Could not find the requested service' not in socket_result.msg)
    name: Disable socket of service zebra if applicable
    register: socket_result
    service:
        enabled: 'no'
        name: '{{item}}'
        state: stopped
    tags:
    - service_zebra_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - CCE-27191-6
    - NIST-800-53-SC-32
    with_items:
    - zebra.socket
-   failed_when: service_result is failed and ('Could not find the requested service' not in service_result.msg)
    name: Disable service telnet
    register: service_result
    service:
        enabled: 'no'
        name: '{{item}}'
        state: stopped
    tags:
    - service_telnet_disabled
    - high_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - CCE-27401-9
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7
    - NIST-800-53-IA-5(1)(c)
    - NIST-800-171-3.1.13
    - NIST-800-171-3.4.7
    with_items:
    - telnet
-   failed_when: socket_result is failed and ('Could not find the requested service' not in socket_result.msg)
    name: Disable socket of service telnet if applicable
    register: socket_result
    service:
        enabled: 'no'
        name: '{{item}}'
        state: stopped
    tags:
    - service_telnet_disabled
    - high_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - CCE-27401-9
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7
    - NIST-800-53-IA-5(1)(c)
    - NIST-800-171-3.1.13
    - NIST-800-171-3.4.7
    with_items:
    - telnet.socket
-   name: Ensure telnet is removed
    package:
        name: '{{item}}'
        state: absent
    tags:
    - package_telnet_removed
    - low_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - CCE-27305-2
    - NIST-800-171-3.1.13
    with_items:
    - telnet
-   name: Ensure telnet-server is removed
    package:
        name: '{{item}}'
        state: absent
    tags:
    - package_telnet-server_removed
    - high_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - CCE-27165-0
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7(a)
    - DISA-STIG-RHEL-07-021710
    with_items:
    - telnet-server
-   name: Ensure talk is removed
    package:
        name: '{{item}}'
        state: absent
    tags:
    - package_talk_removed
    - unknown_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - CCE-27432-4
    with_items:
    - talk
-   name: Ensure talk-server is removed
    package:
        name: '{{item}}'
        state: absent
    tags:
    - package_talk-server_removed
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - CCE-27210-4
    with_items:
    - talk-server
-   failed_when: service_result is failed and ('Could not find the requested service' not in service_result.msg)
    name: Disable service rsh
    register: service_result
    service:
        enabled: 'no'
        name: '{{item}}'
        state: stopped
    tags:
    - service_rsh_disabled
    - high_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - CCE-27337-5
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7
    - NIST-800-53-IA-5(1)(c)
    - NIST-800-171-3.1.13
    - NIST-800-171-3.4.7
    with_items:
    - rsh
-   failed_when: socket_result is failed and ('Could not find the requested service' not in socket_result.msg)
    name: Disable socket of service rsh if applicable
    register: socket_result
    service:
        enabled: 'no'
        name: '{{item}}'
        state: stopped
    tags:
    - service_rsh_disabled
    - high_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - CCE-27337-5
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7
    - NIST-800-53-IA-5(1)(c)
    - NIST-800-171-3.1.13
    - NIST-800-171-3.4.7
    with_items:
    - rsh.socket
-   failed_when: service_result is failed and ('Could not find the requested service' not in service_result.msg)
    name: Disable service rlogin
    register: service_result
    service:
        enabled: 'no'
        name: '{{item}}'
        state: stopped
    tags:
    - service_rlogin_disabled
    - high_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - CCE-27336-7
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7
    - NIST-800-53-IA-5(1)(c)
    - NIST-800-171-3.1.13
    - NIST-800-171-3.4.7
    with_items:
    - rlogin
-   failed_when: socket_result is failed and ('Could not find the requested service' not in socket_result.msg)
    name: Disable socket of service rlogin if applicable
    register: socket_result
    service:
        enabled: 'no'
        name: '{{item}}'
        state: stopped
    tags:
    - service_rlogin_disabled
    - high_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - CCE-27336-7
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7
    - NIST-800-53-IA-5(1)(c)
    - NIST-800-171-3.1.13
    - NIST-800-171-3.4.7
    with_items:
    - rlogin.socket
-   failed_when: service_result is failed and ('Could not find the requested service' not in service_result.msg)
    name: Disable service rexec
    register: service_result
    service:
        enabled: 'no'
        name: '{{item}}'
        state: stopped
    tags:
    - service_rexec_disabled
    - high_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - CCE-27408-4
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7
    - NIST-800-171-3.1.13
    - NIST-800-171-3.4.7
    with_items:
    - rexec
-   failed_when: socket_result is failed and ('Could not find the requested service' not in socket_result.msg)
    name: Disable socket of service rexec if applicable
    register: socket_result
    service:
        enabled: 'no'
        name: '{{item}}'
        state: stopped
    tags:
    - service_rexec_disabled
    - high_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - CCE-27408-4
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7
    - NIST-800-171-3.1.13
    - NIST-800-171-3.4.7
    with_items:
    - rexec.socket
-   name: Ensure rsh is removed
    package:
        name: '{{item}}'
        state: absent
    tags:
    - package_rsh_removed
    - unknown_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - CCE-27274-0
    - NIST-800-171-3.1.13
    with_items:
    - rsh
-   name: Ensure rsh-server is removed
    package:
        name: '{{item}}'
        state: absent
    tags:
    - package_rsh-server_removed
    - high_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - CCE-27342-5
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7(a)
    - DISA-STIG-RHEL-07-020000
    with_items:
    - rsh-server
-   block:
    -   check_mode: false
        find:
            paths: /
            patterns: shosts.equiv
            recurse: true
        name: Detect shosts.equiv Files on the System
        register: shosts_equiv_locations
    -   file:
            path: '{{ item.path }}'
            state: absent
        name: Remove Rsh Trust Files
        when: shosts_equiv_locations
        with_items: '{{ shosts_equiv_locations.files }}'
    tags:
    - no_rsh_trust_files
    - high_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - CCE-27406-8
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7
-   failed_when: service_result is failed and ('Could not find the requested service' not in service_result.msg)
    name: Disable service ypbind
    register: service_result
    service:
        enabled: 'no'
        name: '{{item}}'
        state: stopped
    tags:
    - service_ypbind_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - CCE-27385-4
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7
    with_items:
    - ypbind
-   failed_when: socket_result is failed and ('Could not find the requested service' not in socket_result.msg)
    name: Disable socket of service ypbind if applicable
    register: socket_result
    service:
        enabled: 'no'
        name: '{{item}}'
        state: stopped
    tags:
    - service_ypbind_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - CCE-27385-4
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7
    with_items:
    - ypbind.socket
-   name: Ensure ypserv is removed
    package:
        name: '{{item}}'
        state: absent
    tags:
    - package_ypserv_removed
    - high_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - CCE-27399-5
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7(a)
    - DISA-STIG-RHEL-07-020010
    with_items:
    - ypserv
-   name: Ensure ypbind is removed
    package:
        name: '{{item}}'
        state: absent
    tags:
    - package_ypbind_removed
    - unknown_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - CCE-27396-1
    with_items:
    - ypbind
-   failed_when: service_result is failed and ('Could not find the requested service' not in service_result.msg)
    name: Disable service xinetd
    register: service_result
    service:
        enabled: 'no'
        name: '{{item}}'
        state: stopped
    tags:
    - service_xinetd_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - CCE-27443-1
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7
    - NIST-800-171-3.4.7
    with_items:
    - xinetd
-   failed_when: socket_result is failed and ('Could not find the requested service' not in socket_result.msg)
    name: Disable socket of service xinetd if applicable
    register: socket_result
    service:
        enabled: 'no'
        name: '{{item}}'
        state: stopped
    tags:
    - service_xinetd_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - CCE-27443-1
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7
    - NIST-800-171-3.4.7
    with_items:
    - xinetd.socket
-   name: Ensure xinetd is removed
    package:
        name: '{{item}}'
        state: absent
    tags:
    - package_xinetd_removed
    - unknown_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - CCE-27354-0
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7
    with_items:
    - xinetd
-   name: Enable service crond
    service:
        enabled: 'yes'
        name: '{{item}}'
        state: started
    tags:
    - service_crond_enabled
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - CCE-27323-5
    - NIST-800-53-CM-7
    with_items:
    - crond
-   failed_when: service_result is failed and ('Could not find the requested service' not in service_result.msg)
    name: Disable service kdump
    register: service_result
    service:
        enabled: 'no'
        name: '{{item}}'
        state: stopped
    tags:
    - service_kdump_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - CCE-80258-7
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7
    - NIST-800-53-CM-6(b)
    - DISA-STIG-RHEL-07-021300
    with_items:
    - kdump
-   failed_when: socket_result is failed and ('Could not find the requested service' not in socket_result.msg)
    name: Disable socket of service kdump if applicable
    register: socket_result
    service:
        enabled: 'no'
        name: '{{item}}'
        state: stopped
    tags:
    - service_kdump_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - CCE-80258-7
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7
    - NIST-800-53-CM-6(b)
    - DISA-STIG-RHEL-07-021300
    with_items:
    - kdump.socket
